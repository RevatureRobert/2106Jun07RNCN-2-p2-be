# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  chirper-native-be

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
  - AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  chirperChirpsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/chirper-chirps.chirperChirpsHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: A handler that handles all functions related to chirps
      Policies: 
      - AmazonDynamoDBFullAccess
      Environment:
        Variables:
          TABLE: 
            !Ref chirper
      Events:
        GetChirp:
          Type: Api
          Properties:
            Path: /
            Method: GET
        PostChirp:
          Type: Api
          Properties:
            Path: /
            Method: POST
        DeleteChirp:
          Type: Api
          Properties:
            Path: /{timestamp}
            Method: DELETE

  chirperLikesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/chirper-likes.chirperLikesHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: A handler that handles all functions related to liking chirps
      Policies: 
      - AmazonDynamoDBFullAccess
      Environment:
        Variables:
          TABLE: 
            !Ref chirper
      Events:
        LikeChirp:
          Type: Api
          Properties:
            Path: /like/{timestamp}/{username}
            Method: PUT
        UnlikeChirp:
          Type: Api
          Properties:
            Path: /unlike/{timestamp}/{username}
            Method: PUT

  chirperCommentsFucntion:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/chirper-comments.chirperCommentsHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: A handler that handles all functions related to comments in chirps
      Policies: 
      - AmazonDynamoDBFullAccess
      Environment:
        Variables:
          TABLE: 
            !Ref chirper
      Events:
        PostComment:
          Type: Api
          Properties:
            Path: /{timestamp}/comments
            Method: PUT
        DeleteComment:
          Type: Api
          Properties:
            Path: /{timestamp}/comments/{cmttimestamp}
            Method: DELETE

  # DynamoDB table to store item: {id: &lt;ID&gt;, name: &lt;NAME&gt;}
  chirper:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: timestamp
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

Outputs:
  WebEndpoint:
    Description: 'API Gateway endpoint URL for Prod stage'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
